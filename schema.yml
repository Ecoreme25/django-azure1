openapi: 3.0.3
info:
  title: Auth System
  version: 1.0.0
  description: Your project description
paths:
  /api/v1/auth/api/token/:
    post:
      operationId: api_v1_auth_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/github/:
    post:
      operationId: api_v1_auth_github_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GithubOauth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GithubOauth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GithubOauth'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubOauth'
          description: ''
  /api/v1/auth/google/:
    post:
      operationId: api_v1_auth_google_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleSignIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleSignIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleSignIn'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSignIn'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: api_v1_auth_logout_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogoutUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogoutUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutUser'
          description: ''
  /api/v1/auth/password-reset/:
    post:
      operationId: api_v1_auth_password_reset_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/v1/auth/password-reset-confirm/{uidb64}/{token}/:
    get:
      operationId: api_v1_auth_password_reset_confirm_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/profile/:
    get:
      operationId: api_v1_auth_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/register/:
    post:
      operationId: api_v1_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegister'
          description: ''
  /api/v1/auth/set-new-password/:
    patch:
      operationId: api_v1_auth_set_new_password_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: api_v1_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/verify-email/:
    post:
      operationId: api_v1_auth_verify_email_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    GithubOauth:
      type: object
      properties:
        code:
          type: string
          minLength: 2
      required:
      - code
    GoogleSignIn:
      type: object
      properties:
        access_token:
          type: string
          minLength: 6
      required:
      - access_token
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 6
        password:
          type: string
          writeOnly: true
          maxLength: 68
        full_name:
          type: string
          readOnly: true
          maxLength: 255
        access_token:
          type: string
          readOnly: true
          maxLength: 255
        refresh_token:
          type: string
          readOnly: true
          maxLength: 255
      required:
      - access_token
      - email
      - full_name
      - password
      - refresh_token
    LogoutUser:
      type: object
      properties:
        refresh_token:
          type: string
      required:
      - refresh_token
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
      required:
      - email
    PatchedSetNewPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 100
          minLength: 6
        confirm_password:
          type: string
          writeOnly: true
          maxLength: 100
          minLength: 6
        uidb64:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    SetNewPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 100
          minLength: 6
        confirm_password:
          type: string
          writeOnly: true
          maxLength: 100
          minLength: 6
        uidb64:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - password
      - token
      - uidb64
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserRegister:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 255
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        password2:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
